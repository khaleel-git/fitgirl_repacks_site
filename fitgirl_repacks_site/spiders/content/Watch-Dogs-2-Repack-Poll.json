{
    "link": null,
    "title": "Watch Dogs 2 Repack Poll",
    "first_img": [],
    "second_img": null,
    "body": "<div class=\"entry-content\"><p><span style=\"color: #339966;\"><strong>Uploading Obama</strong></span></p><p><del>Here\u2019s the deal. I have the repack of WD2 in my dockyard ready for internal tests. Unlike all other repacks already available, it\u2019s the smallest in the world (~16.4/16.7 GB for any single language) but of course \u2013 thanks to a one good guy (he prefers to stay anonymous just yet), who\u2019ve made the proper repacking tools.</del></p><p><del>But I have some doubts. This repack has two modes of installation: one is not bit-perfect, but faster (around 30 minutes on a generic PC, faster on SSD) and another one is much slower (around 1 hour + up to 2 hours for Ultra Textures add-on, 4.1 GB), but is bit-perfect mode.</del></p><p><del>Alternatively, I can make generic repack with a size of around 18-something GB, as all other ones \u2013 installation time of it will be 10-15 minutes. The small difference is due the game\u2019s resources: more than half of it\u2019s size are eaten by uncompressible audio and video files.</del></p><p><del>So, please vote, what would you prefer. I must remind you, that I never take poll results as a direction, but use it for consideration. So don\u2019t expect that the winning option will produce the elected repack.</del></p><p><del><span style=\"color: #ff0000;\"><strong>One more time, for most illiterate users: BOTH repacks are bit-perfect. Smaller has 2 modes \u2013 bit-perfect and fast, larger (if I make it) will have ONLY bit-perfect mode.</strong></span></del></p><p><script>  (function(d, s, id){    var js,        fjs = d.getElementsByTagName(s)[0],        p = (('https:' == d.location.protocol) ? 'https://' : 'http://'),        r = Math.floor(new Date().getTime() / 1000000);    if (d.getElementById(id)) {return;}    js = d.createElement(s); js.id = id; js.async=1;    js.src = p + \"www.opinionstage.com/assets/loader.js?\" + r;    fjs.parentNode.insertBefore(js, fjs);  }(document, 'script', 'os-widget-jssdk'));</script></p><div id=\"2414525\" class=\"os_poll\" data-path=\"/polls/2414525\"></div>             </div>"
}